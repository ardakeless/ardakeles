
package Bluejackgame;
import java.util.Random;
import java.util.Scanner;
public class Bluejackgame {
 private static final int DECK_SIZE = 40;
 private static final int PLAYER_DECK_SIZE = 10;
 private static final int HAND_SIZE = 4;
 private static final int BOARD_LIMIT = 9;
 private static final int TARGET_SCORE = 20;
 private int[] gameDeck;
 private int[] computerDeck;
 private int[] playerDeck;
 private int[] computerBoard;
 private int[] playerBoard;
 private int computerWins;
 private int playerWins;
 private Random random;
 private Scanner scanner;
 public Bluejackgame() {
 gameDeck = new int[DECK_SIZE];
 computerDeck = new int[PLAYER_DECK_SIZE];
 playerDeck = new int[PLAYER_DECK_SIZE];
 computerBoard = new int[BOARD_LIMIT];
 playerBoard = new int[BOARD_LIMIT];
 random = new Random();
 scanner = new Scanner(System.in);
 playGame();
 }
 private void initializeDecks() {
 for (int i = 0; i < DECK_SIZE; i++) {
 gameDeck[i] = i % 10 + 1;
 }
 shuffleDeck(gameDeck);
 for (int i = 0; i < HAND_SIZE; i++) {
 computerDeck[i] = gameDeck[i];
 playerDeck[i] = gameDeck[DECK_SIZE - 1 - i];
 }
 for (int i = HAND_SIZE; i < PLAYER_DECK_SIZE; i++) {
 int value;
 if (i < PLAYER_DECK_SIZE - 5) {
 value = random.nextInt(6) + 1;
 } else {
 value = random.nextDouble() < 0.8 ? random.nextInt(6) + 1 : 0;
 }
 computerDeck[i] = value;
 value = random.nextDouble() < 0.8 ? random.nextInt(6) + 1 : 0;
 playerDeck[i] = value;
 }
 shuffleDeck(computerDeck);
 shuffleDeck(playerDeck);
 }
 private void shuffleDeck(int[] deck) {
 for (int i = 0; i < deck.length; i++) {
 int randIndex = random.nextInt(deck.length);
 int temp = deck[i];
 deck[i] = deck[randIndex];
 deck[randIndex] = temp;
 }
 }
